#!/usr/bin/perl -w
#use strict;
#Converts orthgroups gene count generated by OrthoFinder into Flybase gene group gene count by combining orthgroups with assigned Drosophila melanogaster transcripts into functional gene groups curated by Flybase.
#Requires the presence in the same folder of Dmel_CDS.txt, Orthogroups.tsv, gene_group_data_fb_2023_02.tsv and Orthogroups.GeneCount.tsv

##Assign each protein transcript to its Flybase (FB) ID.
#Download GCF_000001215.4_Release_6_plus_ISO1_MT_genomic.gff and create a file, i.e. Dmel_CDS.txt, with two columns one consisting of the protein id and one consisting of the Flybase gene_id. For example, the file NP_001096854.1 will consist of a single line CG17636.

$cmd="mkdir Gene";
system($cmd);

$infile="Dmel_CDS.txt";
open(I, $infile);
while(<I>){
  chomp;
  @CDS=split('\t',$_);
  $outfile=">Gene/$CDS[0].txt";
  open(O,$outfile);
  print "$CDS[0]\n";
  print O "$CDS[1]";
  }

##Orthogroup (OG) extraction
#Extract Drosophila melanogaster primary transcripts from the Orthogroups.tsv generated by OrthoFinder from the NCBI GCF_000001215.4_Release_6_plus_ISO1_MT protein sequences, and translate them into their Flybase ID. It generates a file Dmel_OG with two columns, first Flybase_ID and then the orthogroup in which it was assigned by OrthoFinder.
$outfile=">Dmel_OG.txt";
open(O,$outfile);
$infile="Orthogroups.tsv";
open(I, $infile);
while(<I>){
  chomp;
  @OG=split('\t',$_);
  @mel=split(', ',$OG[17]);
  if(scalar(@mel) > 0){
    for($i=0;$i<@mel;$i++){
#FB name for each protein was previously extracted
      $gfile="Gene/$mel[$i].txt";
      open(G,$gfile);
      while(<G>){
        chomp;
        print "$_\t$OG[0]\n";
        print O "$_\t$OG[0]\n";
        }
      }
    }
  }
#sort OG
$cmd="sort -k 1 Dmel_OG.txt >Dmel_OG_sort.txt";
system($cmd);

##Gene group (GG) extraction
#Download "gene_group_data_fb_2023_02.tsv" from Flybase

$outfile=">Dmel_GG.txt";
open(O,$outfile);

$GG='';
@gene=();
$infile="gene_group_data_fb_2023_02.tsv";
open(I, $infile);
while(<I>){
  chomp;
  @line=split('\t',$_);
  @FBgn=split('',$line[6]);
  unless($line[6] eq 'Group_member_FB_gene_symbol'){
    if(scalar(@FBgn) > 0){
      if($line[2] ne $GG){
        for($i=0;$i<@gene;$i++){
          $size=scalar(@gene);
          print "$gene[$i]\t$GG\t$size\n";
          print O "$gene[$i]\t$GG\t$size\n";
          }
        $GG=$line[2];
        @gene=();
        push @gene, $line[6];
        }
      else{
        push @gene, $line[6];
        }
      }
    }
  }
      for($i=0;$i<@gene;$i++){
        $size=scalar(@gene);
        print "$gene[$i]\t$GG\t$size\n";
        print O "$gene[$i]\t$GG\t$size\n";
        }

#Assign each gene to its largest group
$cmd="sort -k1,1 -k3rn,3 Dmel_GG.txt >Dmel_GG_sort.txt";
system($cmd);

close(I);
close(O);

$outfile=">Dmel_GG_sort_uniq.txt";
open(O,$outfile);

$GG='';
$infile="Dmel_GG_sort.txt";
open(I, $infile);
while(<I>){
  chomp;
  @line=split('\t',$_);
  if($line[0] ne $GG){
    print "$_\n";
    print O "$_\n";
    $GG=$line[0];
    }
  }
print "$_\n";
print O "$_\n";

#Assign each orthgroup to its largest gene group
$cmd="join -j 1 -t \$\'\t\' Dmel_GG_sort_uniq.txt Dmel_OG_sort.txt >Dmel_GG_OG.txt";
system($cmd);
$cmd="sort -k4,4 -k3rn,3 -t \$\'\t\' Dmel_GG_OG.txt >Dmel_GG_OG_sort.txt";
system($cmd);

$outfile=">Dmel_GG_OG_sort_uniq.txt";
open(O,$outfile);

$OG='';
$infile="Dmel_GG_OG_sort.txt";
open(I, $infile);
while(<I>){
  chomp;
  @line=split('\t',$_);
  if($line[3] ne $OG){
    print "$_\n";
    print O "$_\n";
    $OG=$line[3];
    }
  }
print "$_\n";
print O "$_\n";

$cmd="sort -k2 -t \$\'\t\' Dmel_GG_OG_sort_uniq.txt >Dmel_GG_OG_sort_uniq_GGsort.txt";
system($cmd);

##Split each line in the Orthogroups.GeneCount.tsv file generated by OrthoFinder into a separate file carrying the orthogroup name.
$cmd="mkdir OG";
system($cmd);
$input="Orthogroups.GeneCount.tsv";
open(I,$input);
while(<I>){
  chomp;
  @line=split('\t',$_);
  if($line[0] ne 'Orthogroup'){
    $outfile=">OG/$line[0].txt";
    open(O,$outfile);
    print "$line[0]\n";
    print O "$_\n";
    }
  }

##Create the genegroup gene count file, i.e. the input of Cafe5
$outfile=">genegroups_genecount.tab";
open(O,$outfile);

$GG='';
$count=0;
@AoA=();
@Count=();
@Taxa=();
$input="Dmel_GG_OG_sort_uniq_GGsort.txt";
open(I,$input);
while(<I>){
  chomp;
  @line=split('\t',$_);  
  if($line[1] ne $GG){
    for($j=0;$j<@Taxa;$j++){
      $count=0;
      for($i=0;$i<@AoA;$i++){
        $count += $AoA[$i][$j];
        }
      push @Count, $count;        
      }
    print "XXXX\t$GG";
    print O "XXXX\t$GG";
    for ($c=0;$c<@Count;$c++){
      print "\t$Count[$c]";
      print O "\t$Count[$c]";
      }
    print "\n";
    print O "\n";
    $GG=$line[1];
    @AoA=();
    @Count=();
    $group="OG/$line[3].txt";
    open(G,$group);
    while(<G>){
      chomp;
      @row=split('\t',$_);
      @Taxa=@row[1..@row-1];
      push @AoA, [@Taxa];
      }
    close(G);
    }
  else{
    $group="OG/$line[3].txt";
    open(G,$group);
    while(<G>){
      chomp;
      @row=split('\t',$_);
      @Taxa=@row[1..@row-1];
      push @AoA, [@Taxa];
      }
    close(G);
    }
  }
for($j=0;$j<@Taxa;$j++){
  $count=0;
  for($i=0;$i<@AoA;$i++){
    $count += $AoA[$i][$j];
    }
  push @Count, $count;        
  }
print "XXXX\t$GG";
print O "XXXX\t$GG";
for ($c=0;$c<@Count;$c++){
  print "\t$Count[$c]";
  print O "\t$Count[$c]";
  }
print "\n";
print O "\n";

exit;
